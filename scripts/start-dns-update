#!/bin/bash

. /start-dns-utils/dns_checker.sh
. /start-dns-utils/is_valid.sh


if [ -n "$DNS_PROVIDER" ]; then
    provider_path="/start-dns-utils/providers/${DNS_PROVIDER}"
    if [ -f $provider_path ]; then
        . $provider_path
    else
        echo "$DNS_PROVIDER is not a supported DNS provider."
        echo "Select from one of these:"
        echo
        echo "$(ls /start-dns-utils/providers/)"
        exit
    fi
fi

provider_checks

if [ -n $MC_DOMAIN ]; then
    if [[ "$MC_DOMAIN" = /* ]]; then
        domain=$(cat $MC_DOMAIN | tr -d '\n')
    else
        domain=$MC_DOMAIN
    fi
else
    echo "MC_DOMAIN is not defined. Skipping DNS logic."
    exit
fi

echo "I HAVE SET DOMAIN TO" $domain

if [ -n $MC_PORT ] && is_valid_int $MC_PORT; then
    port=$MC_PORT
fi

if [ -n $MC_IP ] && is_valid_ip $MC_IP; then
    ip=$MC_IP
fi

timeout=60
start_time=$(date +%s)
while [ -z $port ] || [ -z $ip ]; do
    echo "EITHER PORT OR IP ARE UNDEFINED"
    current_time=$(date +%s)
    elapsed=$((current_time - start_time))
    if (( elapsed >= timeout )); then
        echo "Timeout reached."
        break
    fi
    if [ -n $port ]; then
        if [ -f $MC_PORT ]; then
            port_candidate=$(cat $MC_PORT | tr -d '\n')
            if is_valid_int $port_candidate; then
                port=$port_candidate
            else
                echo "The value in the port file is not valid. SRV record generation will fail. Port file says:"
                echo $port_candidate
                port="FAILED"
            fi
        fi
    fi
    if [ -z $ip ]; then
        if [ -f $MC_IP ]; then
            ip_candidate=$(cat $MC_IP | tr -d '\n')
            if is_valid_ip $ip_candidate; then
                ip=$ip_candidate
            else
                echo "The value in the ip file is not valid. A and AAAA record generation will fail. ip file says:"
                echo $ip_candidate
                ip="FAILED"
            fi
        fi
    fi
    sleep 1
done
echo "BOTH PORT AND IP ARE DEFINED"
echo $port
echo $ip
read current_ip current_port <<< "$(check_srv_record $MC_DOMAIN)"

if [ "$current_port" != "$port" ] && [ "$port" != "FAILED" ]; then
    update_srv
fi

if [ "$current_ip" != "$ip" ] && [ $ip != "FAILED" ]; then
    update_a
fi

exec "${SCRIPTS:-/}start-configuration" "$@"
